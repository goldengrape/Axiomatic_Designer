export const enUS = {
  app: {
    title: "Axiomatic Design Analysis",
    subtitle: "AI-Powered Iterative Axiomatic Design Analysis Platform",
    footerText: (year: number) => `© ${year} Loop Forge. AI-Powered, Iterative Innovation.`,
    statusBase: "System Status",
    currentIterationOf: (current: number, max: number) => `Current Iteration: ${current} / ${max}`,
    completedIterations: (current: number) => `Completed Iterations: ${current}. Score or iteration count met.`,
    adjustingForContinuation: (current: number, max: number, targetScore: number) => `Preparing to continue from round ${current} results. New max rounds: ${max}, target score: ${targetScore}.`,
    totalInputTokens: "Total Input Tokens",
    totalOutputTokens: "Total Output Tokens",
    errorOccurred: "Error Occurred!",
    defaultError: "An unknown error occurred.",
    geminiErrorPrefix: "Gemini API call failed",
    writerErrorPrefix: "AI Writer API call failed",
    reviewerErrorPrefix: "AI Reviewer API call failed",
    noContentReturned: "AI did not return any text content.",
    jsonParseFailed: (message: string, textSample: string) => `JSON parsing failed: ${message}. Original text snippet: ${textSample}`,
    writerMissingDrafts: "Parsed data is missing the 'drafts' array or it's improperly formatted.",
    writerDraftCountMismatch: (returned: number, expected: number) => `AI returned ${returned} drafts, but ${expected} were requested. Attempting to use returned drafts.`,
    writerMissingResponseToFeedback: "Parsed data 'responseToPreviousFeedback' field is missing or has incorrect type.",
    writerMissingDraftContentOrSummary: (index: number) => `Parsed data's draft ${index + 1} is missing 'draftContent' or 'revisionSummary' field or has incorrect type.`,
    reviewerMissingReviews: (expected: number) => `Parsed data 'individualDraftReviews' field is missing, improperly formatted, or does not match the number of drafts (${expected}).`,
    reviewerInvalidReviewContent: (index: number) => `Parsed data's review ${index + 1} has missing 'reviewComments' or 'score' field, incorrect type, or invalid score.`,
    reviewerInvalidSelectedIndex: (index?: number, count?: number) => `AI Reviewer returned an invalid selected draft index${index !== undefined ? `: ${index}` : ''}${count !== undefined ? `. Number of drafts: ${count}` : ''}.`,
    reviewerMissingConsolidatedFeedback: "Parsed data 'consolidatedFeedback' field is missing or has incorrect type.",
    internalErrorCannotContinue: "Internal error: Cannot proceed to the next writing round.",
    continueErrorNoDraft: "Cannot continue: No previously selected draft found. Please reset or ensure an iteration round completed correctly.",
    continueErrorMaxIterationsReached: (current: number, max: number) => `Cannot continue: Currently ${current} rounds completed, which meets or exceeds the new maximum iterations ${max}. Please increase max iterations and try again.`,
    noIterationToContinue: "No completed iteration available to continue from. Please complete an iteration cycle first.",
    failedToGetPreviousFeedback: "Failed to retrieve feedback from the previous round. Please enter manually.",
  },
  spinner: {
    processing: "Processing, please wait...",
  },
  configPanel: {
    backgroundMaterialLabel: "User Requirements",
    backgroundMaterialPlaceholder: (maxLength: number) => `Enter background material, or upload a file. Max ${maxLength} characters.`,
    backgroundMaterialChars: (currentLength: number, maxLength: number) => `${currentLength} / ${maxLength} chars`,
    uploadFileButton: "Upload File (.txt, .md)",
    uploadFileErrorType: "Please upload .txt or .md files.",
    uploadFileErrorSize: (maxLength: number) => `File content exceeds maximum length (${maxLength} characters). Please choose a smaller file.`,
    uploadFileErrorRead: "Error reading file.",
    draftCountLabel: "AI Drafts (N)",
    minIterationsLabel: "Min Iterations",
    maxIterationsLabel: "Max Iterations",
    modelLabel: "AI Model",
    startButton: "Start Iteration",
    startButtonLoading: "Processing...",
    continueButton: "Continue Iteration",
    resetButton: "Reset All",
  },
  iterationView: {
    initialPrompt: "Please configure parameters and start the iteration.",
    historyTitle: "Iteration History & Details",
    roundTitle: (roundNumber: number) => `Round ${roundNumber}`,
    writerPhaseTitle: "AI Writer Phase",
    writerResponseToFeedback: "Response to Previous Feedback:",
    writerOutputGenerating: "Writer output generating...",
    writerOutputPending: "Writer output pending...",
    draftDisplayTitle: (index: number) => `Draft ${index + 1}`,
    finalSelectedDraftTitle: "Final Selected Draft",
    draftSelectedSuffix: "(Selected)",
    revisionSummaryLabel: "Revision Summary:",
    reviewerPhaseTitle: "AI Reviewer Phase",
    reviewerOutputGenerating: "Reviewer output generating...",
    reviewerOutputPending: "Reviewer output pending...",
    reviewDisplayTitle: (index: number) => `Review for Draft ${index + 1}`,
    scoreLabel: (score: number) => `Score: ${score}/100`,
    selectedDraftIndexLabel: "Selected Draft Index:",
    consolidatedFeedbackLabel: "Consolidated Feedback & Suggestions (for next round or final assessment):",
    completedCardTitle: "Iteration Cycle Complete",
    completedMessageHeader: "Iteration Complete!",
    completedMessageBody: "Target score or maximum iterations reached.",
    completedSelectedDraftLabel: "Final selected draft is as follows:",
    completedFinalReviewLabel: "Final Review Comments:",
    downloadFinalDraftButton: "Download Final Draft",
    downloadDraftFilename: (round: number) => `LoopForge_FinalDraft_R${round}.txt`,
    downloadCurrentDraftFilename: (round: number) => `LoopForge_Draft_R${round}_BeforeContinuation.txt`,
    continueOptimizingButton: "Continue Optimizing This Result",
    adjustingCardTitle: "Preparing to Continue Iteration",
    adjustingMessageHeader: "Adjust & Continue",
    adjustingMessageBody: "The next round of optimization will be based on the following draft:",
    editFeedbackLabel: "Edit Review Comments for Next Writer Round:",
    editFeedbackAriaLabel: "Edit consolidated feedback for the next round",
    adjustingConfigInstructions: "Please adjust 'Max Iterations' or 'Target Score' in the configuration area above (if needed), then click 'Continue Iteration'.",
    downloadCurrentDraftButton: "Download Current Draft",
    expandSection: "▼",
    collapseSection: "▲",
  },
  systemStatus: {
    [Symbol.for("IDLE")]: "Idle",
    [Symbol.for("CONFIGURING")]: "Configuring",
    [Symbol.for("WRITING")]: "AI Writing...",
    [Symbol.for("REVIEWING")]: "AI Reviewing...",
    [Symbol.for("PAUSED")]: "Paused (Awaiting User Action)",
    [Symbol.for("COMPLETED")]: "Iteration Complete (Can Choose to Continue)",
    [Symbol.for("ADJUSTING_FOR_CONTINUATION")]: "Adjusting (Preparing to Continue Iteration)",
    [Symbol.for("ERROR")]: "Error Occurred"
  },
  aria: {
    configInputLabel: (label: string) => `${label} input`,
    // Add more specific aria labels as needed
  },
  languageSwitcher: {
    label: "Select Language",
  },
};